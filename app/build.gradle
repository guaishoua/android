apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'org.greenrobot.greendao'
apply from: "../mobsdk.gradle"

android {
    // 避免 lint 检测出错时停止构建
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    flavorDimensions "default"
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "com.android.tacu"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode project.APP_VERSION_CODE as int
        versionName project.APP_VERSION_NAME
        multiDexEnabled true
        vectorDrawables.useSupportLibrary true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86"
        }
    }

    //6.0 sdk移除了org.apache.http.util.EncodingUtils等相关类
    useLibrary 'org.apache.http.legacy'

    dexOptions {
        javaMaxHeapSize "4g"
    }

    signingConfigs {
        debug {
            storeFile file("../tacu123")
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            v1SigningEnabled true
            v2SigningEnabled true
        }

        release {
            storeFile file("../tacu123")
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            //没打包状态是否使用正式环境 true:正式环境 false:测试环境
            buildConfigField "boolean", "ISFORMALHOST", IS_FORMALHOST
            buildConfigField "String", "API_HOST", IS_FORMALHOST.equals("true") ? "${rootProject.ext.android.Api_Release}" : "${rootProject.ext.android.Api_Debug}"
            buildConfigField "String", "IP_RELEASE", IS_FORMALHOST.equals("true") ? "${rootProject.ext.android.Ip_Release}" : "${rootProject.ext.android.Ip_Debug}"
            buildConfigField "String", "SALT_LOGIN_PWD", "${rootProject.ext.android.Salt_Login_pwd}"
            buildConfigField "String", "SALT_TRADE_PWD", "${rootProject.ext.android.Salt_Trade_pwd}"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
        }
        release {
            //打包状态是否使用正式环境 true:正式环境 false:测试环境
            buildConfigField "boolean", "ISFORMALHOST", IS_FORMALHOST
            buildConfigField "String", "API_HOST", IS_FORMALHOST.equals("true") ? "${rootProject.ext.android.Api_Release}" : "${rootProject.ext.android.Api_Debug}"
            buildConfigField "String", "IP_RELEASE", IS_FORMALHOST.equals("true") ? "${rootProject.ext.android.Ip_Release}" : "${rootProject.ext.android.Ip_Debug}"
            buildConfigField "String", "SALT_LOGIN_PWD", "${rootProject.ext.android.Salt_Login_pwd}"
            buildConfigField "String", "SALT_TRADE_PWD", "${rootProject.ext.android.Salt_Trade_pwd}"
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            //移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        tacu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "tacu"]
        }
        app_google {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "app_google"]
        }
    }

    sourceSets {
        main() {
            jniLibs.srcDirs = ['libs']
        }
    }

    packagingOptions {
        doNotStrip "**/libDX*.so"
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile

            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName

                if (IS_JENKINS.equals("true")) {
                    fileName = "tacu_v${defaultConfig.versionName}_jenkins"
                } else {
                    if (!variant.buildType.name.equals("debug")) {
                        fileName = "tacu_v${defaultConfig.versionName}"
                    } else {
                        fileName = "tacu_v${defaultConfig.versionName}_debug"
                    }
                }

                if (IS_FORMALHOST.equals("true")) {
                    fileName += "_formal.apk"
                } else {
                    fileName += "_test.apk"
                }

                outputFileName = fileName
            }
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

greendao {
    schemaVersion 2
    daoPackage 'com.greendao.gen'
    targetGenDir 'src/main/java'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:multidex:1.0.3'

    //顶象滑动验证码
    implementation(name: 'dx-captcha-1.5.4', ext: 'aar')
    //k线图
    implementation project(':kchartlib')
    //qmui
    implementation project(':qmui')
    //banner
    implementation project(':xbanner')
    //App更新
    implementation project(':update-app')

    implementation rootProject.ext.supportLibs
    implementation rootProject.ext.okhttpLibs
    implementation rootProject.ext.retrofitLibs
    implementation rootProject.ext.rxJavaLibs
    implementation rootProject.ext.smartRefreshLibs
    implementation rootProject.ext.glideLibs
    implementation rootProject.ext.buglyLibs
    implementation rootProject.ext.umengLibs
    implementation rootProject.ext.otherLibs

    //socket.io
    implementation('io.socket:socket.io-client:1.0.0') {
        exclude group: 'org.json', module: 'json'
    }

    //v-layout用于处理复杂的布局 例如淘宝首页
    implementation('com.alibaba.android:vlayout:1.2.8@aar') {
        transitive = true
    }

    //注解
    implementation "com.jakewharton:butterknife:$rootProject.ext.dependVersion.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.ext.dependVersion.butterKnifeVersion"

    //ZenDesk
    implementation group: 'com.zendesk', name: 'sdk', version: '1.11.0.1'
    implementation group: 'com.zopim.android', name: 'sdk', version: '1.3.5.1'

    //内存检测
    //debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.ext.dependVersion.leakcanaryVersion"
    //releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.ext.dependVersion.leakcanaryVersion"

    //App界面卡顿检测工具
    //implementation "com.github.markzhai:blockcanary-android:$rootProject.ext.dependVersion.blockcanaryVersion"
    //debugImplementation "com.github.markzhai:blockcanary-android:$rootProject.ext.dependVersion.blockcanaryVersion"
    //releaseImplementation "com.github.markzhai:blockcanary-no-op:$rootProject.ext.dependVersion.blockcanaryVersion"
}
